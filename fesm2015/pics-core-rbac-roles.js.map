{"version":3,"file":"pics-core-rbac-roles.js","sources":["../../../../projects/pics-core/rbac-roles/src/lib/rbac-roles.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/urls/rbac-url.config.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/store.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/permissions/permission.store.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/data-store.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/constants/app-constants.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/alert.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/microstrategy.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/service/rbac.service.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@shared/alert/alert.component.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@shared/alert/alert.component.html","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/directives/permission.directive.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/directives/show-field.directives.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/roles/roles.component.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/roles/roles.component.html","../../../../projects/pics-core/rbac-roles/src/lib/rbac-roles.component.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@core/directives/directives.module.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/@shared/alert/alert.module.ts","../../../../projects/pics-core/rbac-roles/src/lib/pics-rbac-roles/pics-rbac-roles.module.ts","../../../../projects/pics-core/rbac-roles/src/lib/rbac-roles.module.ts","../../../../projects/pics-core/rbac-roles/src/public-api.ts","../../../../projects/pics-core/rbac-roles/src/pics-core-rbac-roles.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RbacRolesService {\n\n  constructor() { }\n}\n","export class RoleConfig {\n  public static EndPoint = {\n    role: {\n      getAllUserRole: '/access-control/role',\n      createRole: '/access-control/role/create',\n      getLandingPage: '/platform/menu/application',\n      addPolicyGroup: '/access-control/role',\n      getAllOrgRole: '/access-control/role/organization/{orgid}',\n      dossier: '/dossier'\n    },\n    microstrategy: {\n      login: '/platform/microstrategy/login',\n      getLibrary: '/platform/microstrategy/library'\n    }\n  };\n}\n\nexport class UserConfig {\n  public static EndPoint = {\n\n    User: {\n      getAllUserList: '/org/user',\n      getAllUserActiveInactive: '/org/user?includeInactiveUsers=true',\n      activateUser: '/org/user/activate',\n      createUser: '/org/user/create',\n      userRole: '/org/user/role',\n      managementgroup: '/org/team/managementgroup',\n      getAllUserOrgList: '/org/user/organization/'\n    },\n    Provider: {\n      getProviderList: '/ref/provider',\n      searchProviderList: '/ref/provider/search',\n      addProviderUser: '/ref/provider/create/account'\n    }\n  };\n}\nexport class AttachmentConfig {\n  public static EndPoint = {\n    Attachments: {\n      GetAttachmentReferral: '/ref/attachment/referral',\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\n      UploadKey: '/common/files/upload-key',\n      DownloadKey: '/common/files/download-key',\n      PostAttachment: '/ref/attachment/create',\n      PutAttachment: '/ref/attachment'\n    }\n  };\n}\nexport class PolicyGroupConfig {\n  public static EndPoint = {\n    policyGroup: {\n      getPolicyGroupList: '/platform/page-designer/policyGroup',\n      getAllPolicyGroupList: '/platform/page-designer/policyGroup/all',\n      createPolicyGroup: '/platform/page-designer/policyGroup',\n      getOrgPolicyGroups: '/platform/page-designer/policyGroup/organization/{organizationid}'\n    }\n  };\n}\nexport class PermissionsURL {\n  public static EndPoints = {\n    permission: {\n      permissionRoleById: '/access-control/permission/role/{id}',\n    },\n    page: {\n      getPageInformation: '/org/user/page/menulist/{id}',\n      updateMenuOrder: '/access-control/permission/updateMenuOrder'\n    }\n  };\n}\n\nexport class RBACINFO {\n  apiHost = '';\n  tokenKey = '';\n  others?: any;\n  orgID?: any;\n  environment?: Environment;\n}\nexport class Environment {\n  mstrUsername?: string;\n  mstrPassword?: string;\n  mstrURL?: string;\n  mstrProjectID?: string;\n  applicationid?: string;\n  priority?: string\n}\n\n","import { BehaviorSubject, Observable } from 'rxjs';\n\nexport class Store<T> {\n  state$: Observable<T>;\n  private _state$: BehaviorSubject<T>;\n\n  protected constructor(initialState: T) {\n    this._state$ = new BehaviorSubject(initialState);\n    this.state$ = this._state$.asObservable();\n  }\n\n  get state(): T {\n    return this._state$.getValue();\n  }\n\n  setState(nextState: T): void {\n    this._state$.next(nextState);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '../service/store.service';\n\n@Injectable()\nexport class PermissionStore extends Store<any> {\n  constructor() {\n    super({});\n  }\n\n  setStore(data: any): void {\n    if(data){\n      this.setState({ ...this.state, ...data });\n    }\n  }\n\n  getStore(type: string = 'P'): Observable<any> {\n    if (type === 'P') return of(this.state);\n    else return of(this.state);\n  }\n\n  private flat(array: any[]) {\n    let result: any[] = [];\n    if(array){\n      array.forEach(item => {\n        result.push(item);\n        if (item && Array.isArray(item)) {\n          result = result.concat(this.flat(item));\n        }\n      });\n    }\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable()\nexport class DataStoreService {\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\n  public currentStore = this.currentStoreSubject.asObservable();\n\n  constructor() {\n    // test code\n  }\n\n  setData(key: string, value: any) {\n    const currentStore = this.getCurrentStore();\n    currentStore[key] = value;\n    this.currentStoreSubject.next(currentStore);\n  }\n\n  setObject(value: any) {\n    this.currentStoreSubject.next(value);\n  }\n\n  getData(key: string): any {\n    const currentStore = this.getCurrentStore();\n    return currentStore[key];\n  }\n\n  clearStore() {\n    const currentStore = this.getCurrentStore();\n    Object.keys(currentStore).forEach((key) => {\n      delete currentStore[key];\n    });\n    this.currentStoreSubject.next(currentStore);\n  }\n\n  getCurrentStore(): any {\n    return this.currentStoreSubject.value;\n  }\n}\n","export class AppConstants {\n  public static errorMessage = 'Something went wrong!';\n  public static regexEmail = '^[0-9a-zA-Z.-]+[@][0-9a-zA-Z.-]+[.][0-9a-zA-Z]{2,}$';\n}","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\n  export class AlertService {\n    private subject = new Subject<Alert>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n      router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (this.keepAfterRouteChange) {\n            // only keep for a single route change\n            this.keepAfterRouteChange = false;\n          } else {\n            // clear alert messages\n            this.clear();\n          }\n        }\n      });\n    }\n\n    getAlert(): Observable<any> {\n      return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\n    }\n\n    info(message: string, keepAfterRouteChange = false) {\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\n    }\n\n    warn(message: string, keepAfterRouteChange = false) {\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\n    }\n\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\n      this.keepAfterRouteChange = keepAfterRouteChange;\n      this.subject.next(<Alert>{ type: type, message: message });\n    }\n\n    clear() {\n      // clear alerts\n      this.subject.next(<any>{});\n    }\n  }\n  export interface DynamicObject {\n    [key: string]: any;\n  }\n\n  export enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n  }\n  export class Alert {\n    type!: AlertType;\n    message!: string;\n  }\n  export interface Insights {\n    name: string;\n    series: Series[];\n  }\n  export interface Series {\n    value: number;\n    name: string;\n    month: string;\n  }\n\n  export interface Status {\n    name: string;\n    value: number;\n  }\n\n  export class UserGroupDto {\n    id?: number;\n    name?: string;\n    description?: string | null;\n    constructor(data?: Partial<UserGroupDto>) {\n      Object.assign(this, data);\n    }\n  }\n\n  export class UserRolePageDto {\n    id?: number;\n    name?: string;\n    route?: string;\n    icon?: string | null;\n    order?: number;\n    ismenu?: boolean;\n    constructor(data?: Partial<UserRolePageDto>) {\n      Object.assign(this, data);\n    }\n  }\n\n  export class UserRoleDto {\n    id?: number;\n    name?: string;\n    description?: string | null;\n    priority?: number;\n    order?: number;\n    defaultpage?: UserRolePageDto;\n    defaultpageid?: number;\n    parentid?: number | null;\n    parent?: UserRoleDto | null;\n    constructor(data?: Partial<UserRoleDto>) {\n      Object.assign(this, data);\n    }\n  }\n\n  export class UserDto {\n    id?: number;\n    name?: string;\n    description?: string | null;\n    priority?: number;\n    order?: number;\n    defaultpage?: UserRolePageDto;\n    defaultpageid?: number;\n    parentid?: number | null;\n    parent?: UserRoleDto | null;\n    constructor(data?: Partial<UserDto>) {\n      Object.assign(this, data);\n    }\n  }\n  export class AccessManagementConfig {\n    public static EndPoint = {\n      Organization: {\n        getOrganizationList: '/org/organization/all',\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\n      }\n    };\n  }\n","import { Injectable } from '@angular/core';\nimport { RoleConfig } from '../urls/rbac-url.config';\nimport { DataStoreService } from './data-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MicrostrategyService {\n  dossierList: any;\n  RBACORG: any;\n  environment: any;\n  httpService: any;\n  constructor(\n    private _storeservice: DataStoreService) {\n    this._storeservice.currentStore.subscribe((res: any) => {\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\n        this.httpService = res['HTTPSERVICE'];\n        this.RBACORG = res['RBACORG'];\n        this.environment = this.RBACORG['environment'] ? this.RBACORG['environment'] : '';\n      }\n    });\n  }\n\n  getLibraryDetails() {\n    return this.httpService\n      .get(RoleConfig.EndPoint.microstrategy.getLibrary)\n      .toPromise()\n      .then((response: any) => {\n        return response.data.map(mstr => ({\n          id: mstr.target.id,\n          projectId: mstr.projectId,\n          name: mstr.target.name\n        }));\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n// import { HttpService } from './http.service';\nimport { AttachmentConfig, PermissionsURL, PolicyGroupConfig, RoleConfig, UserConfig } from '../urls/rbac-url.config';\nimport { DataStoreService } from './data-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RbacService {\n  httpService: any;\n  constructor(private _storeservice: DataStoreService) {\n    this._storeservice.currentStore.subscribe((res: any) => {\n      if (res) {\n        this.httpService = res['HTTPSERVICE']\n      }\n    })\n  }\n  // constructor(private httpService: HttpService) {}\n\n  getAllUserList(key?: string): Observable<any> {\n    return this.httpService.get(`${UserConfig.EndPoint.User.getAllUserList}/${key}`);\n  }\n  getAllUserOrgList(orgid: any) {\n    return this.httpService.get(UserConfig.EndPoint.User.getAllUserOrgList + orgid);\n  }\n  saveUser(data: any) {\n    return this.httpService.post(UserConfig.EndPoint.User.createUser, data);\n  }\n  updateUser(data: any, userid: string) {\n    return this.httpService.put(`${UserConfig.EndPoint.User.getAllUserList}/${userid}`, data);\n  }\n  deleteUser(id?: string) {\n    return this.httpService.delete(`${UserConfig.EndPoint.User.getAllUserList}/${id}`);\n  }\n  activateUser(data: any) {\n    return this.httpService.post(UserConfig.EndPoint.User.activateUser, data);\n  }\n  addProviderUser(data: any) {\n    return this.httpService.post(UserConfig.EndPoint.Provider.addProviderUser, data);\n  }\n  addUserRole(data: any) {\n    return this.httpService.post(UserConfig.EndPoint.User.userRole, data);\n  }\n  uploadKey(objparams: any) {\n    return this.httpService.post(AttachmentConfig.EndPoint.Attachments.UploadKey, objparams);\n  }\n  getOrgPolicyGroupList(orgid: any) {\n    return this.httpService.get(\n      PolicyGroupConfig.EndPoint.policyGroup.getOrgPolicyGroups.replace('{organizationid}', String(orgid))\n    );\n  }\n  getAllPolicyGroupList(policyGroupId?: number) {\n    const endPoint = policyGroupId\n      ? `${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${policyGroupId}`\n      : PolicyGroupConfig.EndPoint.policyGroup.getAllPolicyGroupList;\n    return this.httpService.get(endPoint);\n  }\n  getPolicyGroupById(id: any) {\n    return this.httpService.get(PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList + '/' + id);\n  }\n\n  getPolicyGroupsByManagementGroup(policyGroupId: number) {\n    return this.httpService.get(`/org/policyGroup/managementgroup/${policyGroupId}`);\n  }\n\n  createPolicyGroup(data: any) {\n    return this.httpService.post(PolicyGroupConfig.EndPoint.policyGroup.createPolicyGroup, data);\n  }\n\n  updatePolicyGroup(id: number, item: any) {\n    return this.httpService.put(`${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${id}`, item);\n  }\n\n  deletePolicyGroup(id: string) {\n    return this.httpService.delete(`${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${id}`);\n  }\n  getAllUserRole(id?: any) {\n    return this.httpService.get(RoleConfig.EndPoint.role.getAllOrgRole.replace('{orgid}', String(id)));\n  }\n\n  deleteRole(id: string) {\n    return this.httpService.delete(`${RoleConfig.EndPoint.role.getAllUserRole}/${id}`);\n  }\n\n  getRoleById(roleid: string) {\n    return this.httpService.get(`${RoleConfig.EndPoint.role.getAllUserRole}/${roleid}`);\n  }\n\n  createRole(data: any) {\n    return this.httpService.post(RoleConfig.EndPoint.role.createRole, data);\n  }\n\n  updateRole(roleId: any, data: any) {\n    return this.httpService.put(`${RoleConfig.EndPoint.role.getAllUserRole}/${roleId}`, data);\n  }\n\n  getLandingPage(id: any) {\n    return this.httpService.get(`${RoleConfig.EndPoint.role.getLandingPage}/${id}`);\n  }\n\n  createPolicyGroupForRole(roleId: number, data: any) {\n    return this.httpService.post(`${RoleConfig.EndPoint.role.addPolicyGroup}/${roleId}/policygroups`, data);\n  }\n\n  updatePolicyGroupForRole(roleId: number, data: any) {\n    return this.httpService.put(`${RoleConfig.EndPoint.role.addPolicyGroup}/${roleId}/policygroups`, data);\n  }\n  getReportDashbaord() {\n    return this.httpService.get(`${RoleConfig.EndPoint.role.dossier}`);\n  }\n  getPermissionRoleById(id: string) {\n    return this.httpService.get(PermissionsURL.EndPoints.permission.permissionRoleById.replace('{id}', id));\n  }\n  getManagementGroupTree(_organizationid: any) {\n    return this.httpService.get('/org/management-group/organization/tree');\n  }\n\n  getAllPages(role_id: any) {\n    return this.httpService.get(PermissionsURL.EndPoints.page.getPageInformation.replace('{id}', role_id));\n  }\n  updateMenuOrder(page: any) {\n    return this.httpService.post(PermissionsURL.EndPoints.page.updateMenuOrder, page);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Alert, AlertService, AlertType } from '../../@core/service/alert.service';\nconst DISPLAY_IN_SECONDS = 8;\n@Component({\n  // moduleId: module.id,\n  selector: 'app-alert',\n  templateUrl: 'alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n  alerts: Alert[] = [];\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit() {\n    this.alertService.getAlert().subscribe((alert: Alert) => {\n      if (!alert) {\n        // clear alerts when an empty alert is received\n        this.alerts = [];\n        return;\n      }\n\n      // add alert to array\n      this.alerts.push(alert);\n      // remove alert after 5 seconds\n      setTimeout(() => this.removeAlert(alert), DISPLAY_IN_SECONDS * 1000);\n    });\n  }\n\n  removeAlert(alert: Alert) {\n    this.alerts = this.alerts.filter(x => x !== alert);\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    // return css class based on alert type\n    switch (alert.type) {\n      case AlertType.Success:\n        return 'alert alert-success';\n      case AlertType.Error:\n        return 'alert alert-danger';\n      case AlertType.Info:\n        return 'alert alert-info';\n      case AlertType.Warning:\n        return 'alert alert-warning';\n    }\n  }\n}\n","<div *ngFor=\"let alert of alerts\" class=\"alert-animate {{ cssClass(alert) }} alert-dismissable\">\n  {{ alert.message }}\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n</div>\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { PermissionStore } from '../permissions/permission.store';\n\n\n@Directive({\n  selector: '[fieldKey]'\n})\nexport class PermissionDirective implements AfterViewInit {\n  @Input() fieldKey!: string;\n  permissions: any;\n  constructor(\n    private readonly renderer: Renderer2,\n    private elementRef: ElementRef,\n    private dataStore: PermissionStore\n  ) {\n  }\n  ngAfterViewInit() {\n    const permissions =  this.dataStore.state;\n     if (permissions) {\n      if (!permissions[this.fieldKey]) {\n        const template = this.elementRef.nativeElement;\n        if (template.tagName === 'A') {\n          if (template) {\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\n            r.innerHTML = template.innerHTML;\n            r.href = 'javascript:void(0);';\n            r['disabled'] = true;\n            r.className = template.className;\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\n          }\n        } else if (\n          template.tagName === 'P-MULTISELECT' ||\n          template.tagName === 'P-DROPDOWN' ||\n          template.tagName === 'P-CHECKBOX' ||\n          template.tagName === 'P-TREESELECT' ||\n          template.tagName === 'P-RADIOBUTTON' ||\n          template.tagName === 'P-CALENDAR'\n        ) {\n          if (template) {\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\n            r.innerHTML = template.innerHTML;\n            r.className = template.className;\n            r.className += ' p-disabled';\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\n          }\n        } else {\n          this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', 'true');\n          const childInputNodes = this.elementRef.nativeElement.querySelectorAll(\n            'input, select, textarea, button, a, ng-select, div, lable'\n          );\n          childInputNodes.forEach((elem: any) => {\n            this.renderer.setAttribute(elem, 'disabled', 'true');\n          });\n        }\n      }\n    }\n  }\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { PermissionStore } from '../permissions/permission.store';\n\n@Directive({\n  selector: '[showField]'\n})\nexport class ShowFieldDirective implements OnInit {\n  @Input() showField!: string;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private dataStore: PermissionStore\n  ) {}\n\n  ngOnInit(): void {\n    const permissions = this.dataStore.state;\n    if (!permissions || !permissions[this.showField]) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      const lookupIds = sessionStorage.getItem('LOOKUP_IDS');\n      if (lookupIds) {\n        const lookupIdArray = lookupIds.split(',');\n        Object.entries(permissions)\n          .filter(item => item[0].startsWith('GALKP_'))\n          .forEach(([key, value]) => {\n            for (const _value of <[]>value) {\n              const _key = key.replace('GALKP_', '');\n              if (\n                _key === this.showField &&\n                lookupIdArray.includes(String(_value['lookupid'])) &&\n                _value['action'] === 'H'\n              ) {\n                this.viewContainer.clear();\n              }\n            }\n          });\n      }\n    }\n  }\n}\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MenuItem } from 'primeng/api/menuitem';\nimport { TreeNode } from 'primeng/api/treenode';\nimport { Subscription } from 'rxjs';\nimport { AppConstants } from '../@core/constants/app-constants';\nimport { LandingPageModel, RoleModel, UserRoleDto } from '../@core/datamodel/rbacDataModel';\nimport { AlertService } from '../@core/service/alert.service';\nimport { DataStoreService } from '../@core/service/data-store.service';\nimport { MicrostrategyService } from '../@core/service/microstrategy.service';\nimport { RbacService } from '../@core/service/rbac.service';\nimport { RBACINFO } from '../@core/urls/rbac-url.config';\nimport { filter } from 'rxjs/operators';\ndeclare const $: any;\n@Component({\n  selector: 'roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n  roleId!: number;\n  deleteactive_user: boolean = false;\n  deleteactive_buttonok: boolean = false;\n  roleList: RoleModel[] = [];\n  filteredRoleList: RoleModel[] = [];\n  isDisabled!: boolean;\n  selectedPermissionsGroup: { id: number; allow: boolean; write: boolean }[] = [];\n  userroles: UserRoleDto[] = [];\n  isDisabledOther!: boolean;\n  deletedId!: string;\n  modelRoleName: string = '';\n  roleForm!: FormGroup;\n  formSubmit!: boolean;\n  permissions: Array<any> = [];\n  filterPermissions: any[] = [];\n  landingPage: LandingPageModel[] = [];\n  policyGroupList: any;\n  permissionAllow!: boolean;\n  orgId: any;\n  reportDashboardList: any;\n  duplicatereportDashboardList: any;\n  environment: any;\n  RBACORG: RBACINFO = new RBACINFO();\n  orgSubs!: Subscription;\n  modalContent: string;\n  items: MenuItem[] = [];\n  activeItem!: MenuItem;\n  firstTab!: boolean;\n  mainMenuList: any = [];\n  reArrangedList: any = [];\n  dublicateLandingPage: any[] = [];\n  menuList: any = [];\n  subMenuList: any = [];\n  parent: any = [];\n  childMenuList: any = [];\n  showChildren: boolean = false;\n  parentMenulist: TreeNode[] = [];\n  selectedFile: TreeNode<any> | TreeNode<any>[];\n  httpService: any;\n  validationErrors: { [key: string]: string } = {};\n  inputValidationMethod: any;\n  policyGroupsLength: any;\n  enableButton: boolean;\n  checkedRolesArr: any = [];\n\n  buildTree = (parentId) => (item) => {\n    const children = this.menuList.filter((child) => child.parentid === item.id);\n    return {\n      ...item,\n      ...(children.length > 0 && { children: children.map(this.buildTree(item.id)) }),\n    };\n  };\n  originalPermissions: Array<any> = [];\n\n\n  nestedData() {\n    this.mainMenuList = this.menuList.filter((item) => !item.parentid).map(this.buildTree(null))\n  }\n\n  constructor(\n    injector: Injector,\n    private formBuilder: FormBuilder,\n    private alertService: AlertService,\n    private mstrService: MicrostrategyService,\n    private rolesService: RbacService,\n    private _storeservice: DataStoreService,\n    private permissionService: RbacService\n  ) {\n    this.formSubmit = false;\n    this.orgSubs = this._storeservice.currentStore.subscribe((res: any) => {\n      this.inputValidationMethod = res['INPUTVALIDATIONMETHOD']\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\n        this.formSubmit = false;\n        this.permissionAllow = false;\n        this.RBACORG = res['RBACORG'];\n        this.environment = this.RBACORG['environment'];\n        this.orgId = parseInt(this.RBACORG['orgID']);\n        this.httpService = res['HTTPSERVICE']\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.initializeform();\n    this.getReportDashboard();\n    this.getRoleList();\n    this.getPolicyGroupList();\n    this.getLandingPage();\n    this.getTabs();\n\n    this.roleForm.valueChanges.subscribe(() => {\n      this.enableButton = this.isAnyFormControlWithValue();\n    });\n  }\n\n  isAnyFormControlWithValue(): boolean {\n    const formValue = this.roleForm.value;\n    const avoidProperties = ['parentid'];\n\n    for (const key in formValue) {\n      if (formValue.hasOwnProperty(key) && !avoidProperties.includes(key) && formValue[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy(): void {\n    this.orgSubs.unsubscribe();\n  }\n  initializeform() {\n    this.roleForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      defaultpageid: ['', Validators.required],\n      parentid: [2],\n      policyGroupId: ['', Validators.required],\n      dossierid: []\n    });\n  }\n\n  get formValidate() {\n    return this.roleForm.controls;\n  }\n\n  onInput(event: Event, fieldtype: any, label: any, required: boolean) {\n    const error = this.inputValidationMethod(event, fieldtype, label, required);\n    if (error && typeof error === 'string') {\n      this.validationErrors[label] = error;\n    } else {\n      delete this.validationErrors[label];\n    }\n  }\n\n  getLandingPage() {\n    this.rolesService.getLandingPage('1').subscribe(\n      (res: any) => {\n        if (res) {\n          this.landingPage = res['data'].filter((x: any) => x.route.charAt(0) === '/');\n        }\n        this.dublicateLandingPage = [...this.landingPage];\n      },\n      (error: any) => console.log(error)\n    );\n  }\n\n  getRoleList(_key?: string) {\n    this.rolesService.getAllUserRole(this.orgId).subscribe(\n      (res: any) => {\n        this.roleList = res['data'].filter((a: any) => a.name !== 'Super admin');\n        this.filteredRoleList = this.roleList;\n      },\n      (err: any) => console.log(err)\n    );\n  }\n\n  getPolicyGroupList(_managementGroupId?: number) {\n    this.rolesService.getOrgPolicyGroupList(this.orgId).subscribe(\n      (res: any) => {\n        this.policyGroupList = res['data'];\n      },\n      (err: any) => console.log(err)\n    );\n  }\n  clearSearch(event: Event) {\n    const inputElement = document.querySelector('.form-control') as HTMLInputElement;\n    if (inputElement) {\n      inputElement.value = '';\n      this.filteredRoleList = this.roleList;\n    }\n  }\n  onClickAddRole() {\n    this.enableButton = false;\n    this.roleForm.reset();\n    this.formSubmit = false;\n    this.initializeform();\n    this.roleForm.get('policyGroupId').enable();\n    this.roleForm.valueChanges.subscribe(() => {\n      this.enableButton = this.isAnyFormControlWithValue();\n    });\n    this.permissionAllow = false;\n    this.permissions = [];\n    this.filterPermissions = [];\n    this.roleId = 0;\n    this.firstTab = true;\n    this.validationErrors = {};\n    this.policyGroupsLength = 0;\n  }\n  searchRole(event: Event) {\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\n    this.filteredRoleList = this.roleList.filter(a => a?.name?.toLowerCase().startsWith(value));\n  }\n\n  clearPermission(event?: Event) {\n    const inputElement = document.querySelector('.clearbox') as HTMLInputElement;\n    if (inputElement) {\n      inputElement.value = '';\n    }\n    this.permissions = this.originalPermissions\n  }\n\n  searchRolePermission(event: Event) {\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\n    this.permissions = this.originalPermissions.filter(a => a?.description?.toLowerCase().startsWith(value));\n  }\n\n  getTabs() {\n    this.items = [\n      {\n        label: 'Permissions',\n        icon: '',\n        command: event => {\n          this.activateMenu(event);\n        }\n      },\n      {\n        label: 'Menu Ordering',\n        icon: '',\n        command: event => {\n          this.activateMenu(event);\n        }\n      }\n    ];\n    this.activeItem = this.items[0];\n    this.firstTab = true;\n  }\n\n  getRoleInfo(roleid: any) {\n    this.formSubmit = false;\n    this.validationErrors = {};\n    this.clearPermission();\n    this.dublicateLandingPage = this.landingPage;\n    this.roleId = roleid;\n    if (roleid) {\n      this.isDisabled = true;\n      this.getTabs();\n      this.rolesService.getRoleById(roleid).subscribe((res: any) => {\n        this.permissionAllow = true;\n        this.roleInformation(res);\n        this.selectPolicyGroup();\n      });\n    } else {\n      this.roleForm.reset();\n      this.permissions = [];\n      this.isDisabled = false;\n      this.isDisabledOther = false;\n      this.roleForm.enable();\n      this.policyGroupsLength = 0\n    }\n  }\n  roleInformation(res: any) {\n    this.roleForm.patchValue({\n      name: res.data.name,\n      defaultpageid: res.data.defaultpageid,\n      parentid: res.data.parentid,\n      policyGroupId:\n        res?.data?.policyGroups\n          .filter((item: any) => item)\n          .map((item: any) => {\n            return item['id'];\n          }) || [],\n      dossierid: JSON.parse(res.data.dossierid)?.id\n    });\n    this.permissions = [...res?.data?.permissions];\n    this.filterPermissions = this.permissions;\n    this.permissions = this.permissions\n      .map(f => {\n        return Object.assign({ isFormBuilder: false }, f);\n      })\n      .map(g => {\n        if (g.key === 'FORM') {\n          g.isFormBuilder = true;\n        } else {\n          g.isFormBuilder = false;\n        }\n        return g;\n      });\n    this.selectedPermissionsGroup = [];\n    if (res.data.permissions && res.data.permissions.length) {\n      res.data.permissions.forEach((ele: any) => {\n        this.getSelectedPermisions(ele);\n      });\n    }\n    this.originalPermissions = this.permissions;\n    this.isDisabledOther = !this.hasAccess;\n    const isAdmin = this.userroles.find(({ name }) => name === 'Admin');\n    if (isAdmin) {\n      this.roleForm.enable();\n      this.isDisabledOther = false;\n    }\n    // else if (!this.hasAccess || res.isreadonly) {\n    //   this.roleForm.controls['name'].disable();\n    // }\n    else {\n      // this.roleForm.enable();\n    }\n  }\n  get hasAccess() {\n    return this.userroles.find(({ id, name }) => id === this.roleId || name === 'Admin');\n  }\n\n  isPrivilage(permission: any) {\n    if (permission && permission?.permissions && permission?.permissions?.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  selectAllPage(index: number, event: any) {\n    event.stopPropagation();\n    this.permissions[index].checked = event.target.checked;\n    this.setSelectedPermisions(\n      event.target.checked,\n      this.permissions[index].id,\n      this.permissions[index].checked,\n      this.permissions[index].checkedwrite\n    );\n    this.checkedRolesArr = this.permissions.filter((item) => item.checked === true);\n    this.permissions[index].permissions.forEach((page: any) => {\n      page.checked = event.target.checked;\n      page.checkedwrite = event.target.checked;\n      this.setSelectedPermisions(event.target.checked, page.id, page.checked, page.checkedwrite);\n      page.permissions.forEach((privilege: any) => {\n        privilege.checked = event.target.checked;\n        privilege.checkedwrite = event.target.checked;\n        this.setSelectedPermisions(event.target.checked, privilege.id, privilege.checked, privilege.checkedwrite);\n      });\n    });\n  }\n\n  getSelectedPermisions(item: any) {\n    this.setSelectedPermisions(item.checked, item.id, item.checked, item.checkedwrite);\n    if (item.permissions && item.permissions.length) {\n      item.permissions.forEach((page: any) => {\n        this.setSelectedPermisions(page.checked, page.id, page.checked, page.checkedwrite);\n        if (page && page.permissions?.length) {\n          page.permissions.forEach((privilege: any) => {\n            this.setSelectedPermisions(privilege.checked, privilege.id, privilege.checked, privilege.checkedwrite);\n          });\n        }\n      });\n    }\n  }\n\n  selectAllPrivilage(pageIndex: number, permissionIndex: number, event: any) {\n    event.stopPropagation();\n    if(event.target.checked) {\n      this.permissions[pageIndex].checked = event.target.checked;\n    }\n    if (event.target.value === 'read' || event.target.value === 'on') {\n      this.permissions[pageIndex].permissions[permissionIndex].checked = event.target.checked;\n    }\n    if (event.target.value === 'write') {\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite = event.target.checked;\n    }\n    this.setSelectedPermisions(\n      event.target.checked,\n      this.permissions[pageIndex].permissions[permissionIndex].id,\n      this.permissions[pageIndex].permissions[permissionIndex].checked,\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\n    );\n    if (event.target.value === 'read' || event.target.value === 'on') {\n      if (event.target.checked || !event.target.checked) {\n        this.permissions[pageIndex].permissions[permissionIndex].permissions.forEach((page: any) => {\n          page.checked = event.target.checked;\n          this.setSelectedPermisions(event.target.checked, page.id, page.checked, page.checkedwrite);\n        });\n      }\n    } else if (event.target.value === 'write') {\n      if (event.target.checked) {\n        this.permissions[pageIndex].permissions[permissionIndex].permissions.forEach((page: any) => {\n          page.checkedwrite = event.target.checked;\n          this.setSelectedPermisions(event.target.checked, page.id, page.checked, page.checkedwrite);\n        });\n      }\n    }\n    this.getPageChecked(pageIndex);\n  }\n\n  selectPage(pageIndex: number, permissionIndex: number, event: any) {\n    event.stopPropagation();\n    if (event.target.value === 'write') {\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite = event.target.checked;\n    }\n    if (event.target.value === 'read') {\n      this.permissions[pageIndex].permissions[permissionIndex].checked = event.target.checked;\n    }\n    this.setSelectedPermisions(\n      event.target.checked,\n      this.permissions[pageIndex].permissions[permissionIndex].id,\n      this.permissions[pageIndex].permissions[permissionIndex].checked,\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\n    );\n    this.getPageChecked(pageIndex);\n  }\n\n  selectPrivilege(pageIndex: number, permissionIndex: number, privilegeIndex: number, event: any) {\n    event.stopPropagation();\n    if (event.target.value === 'write') {\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checkedwrite =\n        event.target.checked;\n    }\n    if (event.target.value === 'read' || event.target.value === 'on') {\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checked =\n        event.target.checked;\n    }\n    this.setSelectedPermisions(\n      event.target.checked,\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].id,\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checked,\n      this.permissions[pageIndex].permissions[permissionIndex].permissions[privilegeIndex].checkedwrite\n    );\n    this.getPrivilageChecked(pageIndex, permissionIndex);\n    this.getPageChecked(pageIndex);\n  }\n\n  getPageChecked(pageIndex: number) {\n    if (\n      this.permissions[pageIndex].checked !== this.getChecked(this.permissions[pageIndex].permissions) &&\n      this.permissions[pageIndex].checkedwrite !== this.getCheckedWrite(this.permissions[pageIndex].permissions)\n    ) {\n      this.permissions[pageIndex].checked = this.getChecked(this.permissions[pageIndex].permissions);\n      this.setSelectedPermisions(\n        this.permissions[pageIndex].checked,\n        this.permissions[pageIndex].id,\n        this.permissions[pageIndex].checked,\n        this.permissions[pageIndex].checkedwrite\n      );\n    }\n  }\n\n  getPrivilageChecked(pageIndex: number, permissionIndex: number) {\n    if (\n      this.permissions[pageIndex].permissions[permissionIndex].checked !==\n      this.getChecked(this.permissions[pageIndex].permissions[permissionIndex].permissions)\n    ) {\n      this.permissions[pageIndex].permissions[permissionIndex].checked = this.getChecked(\n        this.permissions[pageIndex].permissions[permissionIndex].permissions\n      );\n      this.setSelectedPermisions(\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\n        this.permissions[pageIndex].permissions[permissionIndex].id,\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\n        this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\n      );\n    } else if (\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite !==\n      this.getCheckedWrite(this.permissions[pageIndex].permissions[permissionIndex].permissions)\n    ) {\n      this.permissions[pageIndex].permissions[permissionIndex].checkedwrite = this.getCheckedWrite(\n        this.permissions[pageIndex].permissions[permissionIndex].permissions\n      );\n      this.setSelectedPermisions(\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\n        this.permissions[pageIndex].permissions[permissionIndex].id,\n        this.permissions[pageIndex].permissions[permissionIndex].checked,\n        this.permissions[pageIndex].permissions[permissionIndex].checkedwrite\n      );\n    }\n\n    if (\n      this.permissions[pageIndex].checked !==\n      this.getChecked(this.permissions[pageIndex].permissions)\n    ) {\n      this.permissions[pageIndex].checked = this.getChecked(\n        this.permissions[pageIndex].permissions\n      );\n      this.setSelectedPermisions(\n        this.permissions[pageIndex].checked,\n        this.permissions[pageIndex].id,\n        this.permissions[pageIndex].checked,\n        this.permissions[pageIndex].checkedwrite\n      );\n    } else if (\n      this.permissions[pageIndex].checkedwrite !==\n      this.getCheckedWrite(this.permissions[pageIndex].permissions)\n    ) {\n      this.permissions[pageIndex].checkedwrite = this.getCheckedWrite(\n        this.permissions[pageIndex].permissions\n      );\n      this.setSelectedPermisions(\n        this.permissions[pageIndex].checked,\n        this.permissions[pageIndex].id,\n        this.permissions[pageIndex].checked,\n        this.permissions[pageIndex].checkedwrite\n      );\n    }\n  }\n\n  selectAllAccess(value: boolean) {\n    if (value === false) {\n      this.checkedRolesArr = []\n    }\n    this.permissions.forEach((page: any) => {\n      page.checked = value;\n      this.setSelectedPermisions(value, page.id, page.checked, page.checkedwrite);\n      if (page && page.permissions) {\n        page.permissions.forEach((permission: any) => {\n          permission.checked = value;\n          this.setSelectedPermisions(value, permission.id, permission.checked, permission.checkedwrite);\n          if (permission && permission.permissions?.length) {\n            permission.permissions.forEach((privilege: any) => {\n              privilege.checked = value;\n              privilege.checkedwrite = value;\n              this.setSelectedPermisions(value, privilege.id, privilege.checked, privilege.checkedwrite);\n            });\n          }\n        });\n      }\n    });\n  }\n\n  addNewRole(id: string) {\n    this.permissions = [];\n    this.formSubmit = false;\n    this.permissionAllow = false;\n    this.rolesService.getPermissionRoleById(id).subscribe(\n      (res: any) => {\n        this.permissionAllow = true;\n        this.permissions = res['data'];\n      },\n      (err: any) => console.log(err)\n    );\n  }\n\n  setSelectedPermisions(_selected: boolean, id: number, allow: boolean, write: boolean) {\n    const index = this.selectedPermissionsGroup.findIndex(res => res.id === id);\n    if (index === -1 && allow) {\n      this.selectedPermissionsGroup.push({ id, allow, write });\n    } else if (!allow && !write && index !== -1) {\n      this.selectedPermissionsGroup.splice(index, 1);\n    } else if (index !== -1) {\n      this.selectedPermissionsGroup = this.selectedPermissionsGroup.map(i => {\n        if (i.id === id) {\n          i.write = write;\n          i.allow = allow;\n        }\n        return i;\n      });\n    }\n  }\n\n  resetReportDashboardList() {\n    this.reportDashboardList = this.duplicatereportDashboardList;\n  }\n\n  addRole() {\n    this.formSubmit = true;\n    let data = this.roleForm.getRawValue();\n    if (this.roleForm.valid) {\n      const dossierConfig = this.reportDashboardList?.filter((dossier: any) => dossier.id === data.dossierid)?.map((a: any) => ({\n        id: a.id,\n        projectId: a.projectId\n      }))[0];\n      data.priority = this.environment.priority;\n      data.applicationid = this.environment.applicationid;\n      data.parentid = 2;\n      data.permissions = this.selectedPermissionsGroup;\n      data.dossierid = JSON.stringify(dossierConfig);\n      data = Object.assign({ organizationid: this.orgId }, data);\n      if (this.roleId) {\n        data.id = Number(this.roleId);\n        this.rolesService.updateRole(this.roleId, data).subscribe(\n          () => {\n            this.getRoleList();\n            this.mapPolicyGroupToRole(this.roleId, data.policyGroupId);\n            this.alertService.success('Role updated successfully');\n          },\n          (err: any) => this.alertService.error(err.error.message)\n        );\n      } else {\n        data.id = 0;\n        data.priority = this.environment.priority;\n        this.rolesService.createRole(data).subscribe(\n          (res: any) => {\n            this.cancel();\n            if (data.policyGroupId) {\n              this.mapPolicyGroupToRole(res['data'], data.policyGroupId, 'add');\n            }\n            this.alertService.success('Role saved successfully');\n            this.getRoleList();\n          },\n          (err: any) => this.alertService.error(err.error.message)\n        );\n      }\n    }\n  }\n\n  mapPolicyGroupToRole(id: number, data: [], action?: string) {\n    if (action === 'add') {\n      this.rolesService.createPolicyGroupForRole(id, data).subscribe(\n        () => console.log('policy group mapped to role successfully'),\n        (_err: any) => this.alertService.error(AppConstants.errorMessage)\n      );\n    } else {\n      this.rolesService.updatePolicyGroupForRole(id, data).subscribe(\n        () => console.log('policy group mapped to role successfully'),\n        (_err: any) => this.alertService.error(AppConstants.errorMessage)\n      );\n    }\n  }\n\n  getReturnValue(array: Array<any> = [], type?: string) {\n    return type === 'id'\n      ? array.map(({ id }) => id)\n      : array.map(id => {\n        return { id };\n      });\n  }\n\n  getChecked(item: Array<any>) {\n    return item.filter(({ checked }) => checked).length > 0;\n  }\n  getCheckedWrite(item: Array<any>) {\n    return item.filter(({ checkedwrite }) => checkedwrite).length > 0;\n  }\n\n  cancel() {\n    this.roleForm.reset();\n    this.roleForm.enable();\n    this.permissions = [];\n    this.formSubmit = false;\n    this.permissionAllow = false;\n    this.roleId = 0;\n    this.validationErrors = {};\n    this.filteredRoleList = this.roleList;\n    this.policyGroupsLength = 0;\n  }\n\n  delete(event: Event, id: any, item: any) {\n    if (item?.active_user !== null) {\n      this.deleteactive_user = false;\n      this.deleteactive_buttonok = false;\n      // Perform action when active_user is not null\n      console.log('Deleting Role with active user');\n      this.modalContent = 'This Role is currently associated with active users. De-link users from this Role, to proceed with deleting.';\n    } else {\n      // Perform action when active_user is null\n      console.log('Deleting Role');\n      this.modalContent = 'Are you sure you want to delete the Role?';\n      this.deleteactive_user = true;\n      this.deleteactive_buttonok = true;\n    }\n    event.stopPropagation();\n    this.deletedId = id;\n    $('#Deleteuser').modal('show');\n  }\n\n  deleteRole() {\n    this.rolesService.deleteRole(this.deletedId).subscribe(\n      () => {\n        this.cancel();\n        this.alertService.success('Role deleted successfully');\n        $('#Deleteuser').modal('hide');\n        this.getRoleList();\n      },\n      (_err: any) => this.alertService.error('Failed to delete Role')\n    );\n  }\n\n  async getReportDashboard() {\n    this.reportDashboardList = await this.mstrService.getLibraryDetails();\n    this.duplicatereportDashboardList = await this.mstrService.getLibraryDetails();\n  }\n\n  // roleValidation(): any {\n  //   if (!this.roleForm.value.dossierid) {\n  //     this.alertService.warn('Please fill all required fields');\n  //     return false;\n  //   }\n  //   return true;\n  // }\n  onModelRole(value: string): void {\n    this.modelRoleName = value;\n  }\n\n  searchLandingPageList(event: Event) {\n    const value = (event.target as HTMLInputElement).value.toLowerCase();\n    this.dublicateLandingPage = this.landingPage.filter((a: any) => a?.name?.toLowerCase().startsWith(value));\n  }\n\n  resetLandingPageList() {\n    this.dublicateLandingPage = this.landingPage;\n  }\n\n  activateMenu(event) {\n    if (event.item.label == 'Permissions') {\n      this.firstTab = true;\n      this.clearPermission()\n    } else {\n      this.firstTab = false;\n      this.getPageInformation();\n    }\n  }\n\n  getPageInformation() {\n    this.permissionService.getAllPages(this.roleId).subscribe((res: any) => {\n      this.menuList = res?.data;\n      res.data.map((item, index) => {\n        item.label = item.name\n      });\n\n      this.nestedData();\n      console.log(this.mainMenuList);\n      // document.querySelector('#result').innerHTML = this.buildNavigation(this.menuList);\n\n      // res.data.map((item, index) => {\n      //   if (item.parentid == null) {\n      //     let obj = {\n      //       key : 1,\n      //       id: item.id,\n      //       parentid: item.parentid,\n      //       label: item.name,\n      //       data: 'Documents Folder',\n      //       icon: 'pi pi-fw pi-inbox',\n      //       children: []\n      //     }\n      //     this.mainMenuList.push(obj)\n      //   }\n      // });\n\n      // this.mainMenuList.map((menu, index1) => {\n      //   this.menuList.map((list, index) => {\n      //     if (list?.parentid == menu?.id) {\n      //       let obj = {\n      //         key : 2,\n      //         id: list.id,\n      //         parentid: list.parentid,\n      //         label: list.name,\n      //         data: 'Documents Folder',\n      //         icon: 'pi pi-fw pi-inbox',\n      //         children: []\n      //       }\n      //       this.mainMenuList[index1].children.push(obj);\n      //     }\n      //   })\n      // })\n\n      // this.mainMenuList.map((menu, index1) => {\n      //   menu.children.map((subitem, subindex) => {\n      //     this.menuList.map((list, index) => {\n      //       if(list.parentid == subitem.id)\n      //       {\n      //         let obj = {\n      //             key : 3,\n      //             id: list.id,\n      //             parentid: list.parentid,\n      //             label: list.name,\n      //             data: 'Documents Folder',\n      //             icon: 'pi pi-fw pi-inbox',\n      //           }\n      //           subitem.children.push(obj);\n      //       }\n\n      //     })\n      //   })\n      // })\n\n\n\n    });\n  }\n\n  updateMenuOrder() {\n    this.mainMenuList.forEach((element, index) => {\n      let data = {\n        'menuorder': index + 1,\n        'id': element.rolepermissionid,\n        'roleid': this.roleId\n\n      }\n      this.reArrangedList.push(data)\n      if (element?.children?.length > 0) {\n        element?.children?.forEach((childelement, childindex) => {\n          let childdata = {\n            'menuorder': childindex + 1,\n            'id': childelement.rolepermissionid,\n            'roleid': this.roleId\n          }\n          this.reArrangedList.push(childdata)\n          if (childelement?.children?.length > 0) {\n            childelement?.children?.forEach((childrenelement, childrenindex) => {\n              let childrendata = {\n                'menuorder': childrenindex + 1,\n                'id': childrenelement.rolepermissionid,\n                'roleid': this.roleId\n              }\n              this.reArrangedList.push(childrendata)\n            });\n          }\n        });\n      }\n    });\n    console.log('this.rearrangelist', this.reArrangedList);\n    this.permissionService.updateMenuOrder({ pages: this.reArrangedList }).subscribe((res: any) => {\n      // this.alertService.success('Updated Successfully!');\n      // this.Service.sendUpdate('Updated Successfully');\n      // this.getPageInformation();\n      // for role details update\n      this.addRole();\n      const userRole = sessionStorage.getItem('role_id');\n      if (Number(userRole) === this.roleId) {\n        window.location.reload();\n      }\n    });\n  }\n\n  nodeDrop(event) {\n    if (event.originalEvent.target.childNodes.length === 0) {\n      if (event.dragNode.parentid == event.dropNode.parentid) {\n        event.accept();\n      }\n      else {\n        this.alertService.error('Not Allowed to Drop');\n      }\n      console.log('this.mainMenuList', this.mainMenuList)\n    }\n    else {\n      this.alertService.error('Not Allowed to Drop');\n    }\n  }\n\n  selectPolicyGroup() {\n    this.policyGroupsLength = this.roleForm.value.policyGroupId.length;\n  }\n}\n","<app-alert></app-alert>\n<div class=\"permission\">\n  <div class=\"row\" [formGroup]=\"roleForm\">\n    <div class=\"col-lg-4 col-md-6 col-12\">\n      <div class=\"clearfix\"></div>\n      <div class=\"tab-content py-2 px-2 px-sm-0\">\n        <div class=\"tab-pane fade show active\">\n          <div class=\"form-group bgiconsearch d-flex align-items-center\"> <!-- Modified line -->\n            <span class=\"p-input-icon-right w-100\">\n              <i class=\"pi pi-times-circle\" (click)=\"clearSearch($event)\"></i>\n              <input class=\"form-control\" fieldKey=\"SETTINGS_ROL_SEARCH_BY_NAME\" placeholder=\"Search by Role name\"\n                type=\"text\" (keyup)=\"searchRole($event)\" />\n            </span>\n            <button type=\"button\" class=\"btn btn-primary btncommon ml-2\" fieldKey=\"SETTINGS_ROL_ADD_NEW\"\n              (click)=\"onClickAddRole()\">Add</button>\n          </div>\n          <div class=\"clearfix\"></div>\n          <div class=\"useracess\">\n            <div class=\"d-flex align-items-center justify-content-center h-100 w-100 ng-star-inserted\"\n              *ngIf=\"!filteredRoleList.length\">\n              <p>No Record Found</p>\n            </div>\n            <ng-container *ngFor=\"let item of filteredRoleList\">\n              <div class=\"row userdata align-items-center\" (click)=\"getRoleInfo(item.id)\"\n                [ngClass]=\"{ active: +item.id === roleId }\">\n                <div class=\"col-md-10 col-sm-10 col-10 overflow_txt\">\n                  <span class=\"nameuser\">{{ item.name }}</span> <br />\n                </div>\n                <div class=\"col-md-2 text-right\">\n                  <span class=\"right-icons\">\n                    <em class=\"fa fa-trash text-primary\" *showField=\"'SETTINGS_ROL_DELETE'\"\n                      (click)=\"delete($event, item.id, item)\" aria-hidden=\"true\"></em>\n                  </span>\n                </div>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-8 col-md-6 col-12 roles-right group-role mt-2\">\n      <p-card class=\"rbac-card\" [style]=\"{ width: '100%', 'margin-bottom': '2em' }\">\n        <div class=\"strip_head toggleleft\">\n          <span class=\"report_head font-weight-bold\">Role Details</span>\n        </div>\n        <div class=\"p-fluid p-formgrid row\">\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\n            <label for=\"rolesName\" class=\"referral-form-labels\">Role Name\n              <span class=\"requiredfield text-danger\">*</span>\n            </label>\n            <input id=\"rolesName\" type=\"text\" fieldKey=\"SETTINGS_ROL_ROLE_NAME\" formControlName=\"name\"\n              placeholder=\"Enter Role Name\" aria-describedby=\"rolesName\" [(ngModel)]=\"modelRoleName\"\n              (ngModelChange)=\"onModelRole($event)\" (input)=\"onInput($event, 'name', 'Role Name', true)\" pInputText />\n            <div *ngIf=\"validationErrors['Role Name']\" class=\"p-error block mt-1\">{{validationErrors['Role Name']}}\n            </div>\n            <div *ngIf=\"!validationErrors['Role Name'] && formValidate['name'].errors && formSubmit\">\n              <div *ngIf=\"formValidate['name'].invalid\" class=\"p-error block mt-1\">Role Name is required </div>\n            </div>\n          </div>\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\n            <label aria-labelledby=\"landingPage\" for=\"landingPage\" class=\"referral-form-labels\">Landing Page Menu\n              <span class=\"requiredfield text-danger\">*</span>\n            </label>\n            <p-dropdown name=\"landingPage\" [options]=\"dublicateLandingPage\" placeholder=\"Select Landing Page Menu\"\n              formControlName=\"defaultpageid\" defaultLabel=\"Select Landing Page Menu\" (onHide)=\"resetLandingPageList()\"\n              [resetFilterOnHide]=\"true\" [filter]=\"true\" filterBy=\"name\" (keyup)=\"searchLandingPageList($event)\"\n              [showClear]=\"true\" fieldKey=\"SETTINGS_ROL_LANDING_PAGE\" optionLabel=\"name\" optionValue=\"id\"\n              inputId=\"landingPage\">\n              <ng-template let-item pTemplate=\"selectedItem\">\n                <div pTooltip=\"{{item?.name}}\" tooltipPosition=\"top\" class=\"text-truncate\"> {{ item?.name }}</div>\n              </ng-template>\n              <ng-template let-object pTemplate=\"item\">\n                {{ object.name }}\n              </ng-template>\n            </p-dropdown>\n            <div *ngIf=\"formValidate['defaultpageid'].errors && formSubmit\">\n              <div *ngIf=\"formValidate['defaultpageid'].invalid\" class=\"p-error block mt-1\">Landing Page Menu is\n                required\n              </div>\n            </div>\n          </div>\n          <div class=\"p-field col-lg-4 col-md-12 col-12\">\n            <label aria-labelledby=\"dossierId\" for=\"dossierId\" class=\"referral-form-labels\">Report Dashboard</label>\n            <p-dropdown [options]=\"reportDashboardList\" optionLabel=\"name\" id=\"dossierid\" [resetFilterOnHide]=\"true\"\n              [filter]=\"true\" [showClear]=\"true\" optionValue=\"id\" placeholder=\"Select ID\" formControlName=\"dossierid\">\n              <ng-template let-item pTemplate=\"selectedItem\">\n                <div pTooltip=\"{{item?.name}}\" tooltipPosition=\"top\" class=\"text-truncate\"> {{ item?.name }}</div>\n              </ng-template>\n              <ng-template let-object pTemplate=\"item\">\n                {{ object.name }}\n              </ng-template>\n            </p-dropdown>\n          </div>\n          <!-- <div class=\"p-field col-lg-4 col-md-12 col-12\"></div>\n            <div class=\"p-field col-lg-4 col-md-12 col-12\">\n              <button\n                class=\"pull-right mb-2 btn btn-primary btncommon report_button\"\n                fieldKey=\"SETTINGS_ROL_CONFIGURE_PERMISSION\"\n                (click)=\"addNewRole('1')\">\n                Configure Permission\n              </button>\n            </div> -->\n        </div>\n        <div class=\"p-fluid p-formgrid row\">\n          <div class=\"p-field col-md-12 col-12\">\n            <p-accordion class=\"w-full policygroup-accordion\" iconPos=\"endVal\">\n              <p-accordionTab>\n                <ng-template pTemplate=\"header\">\n                  <span class=\"flex align-items-center head-text gap-2 w-full\">\n                    <span class=\"font-bold\">\n                      <label aria-labelledby=\"policyGroupList\" for=\"policyGroupList\"\n                        class=\"mb-0 referral-form-labels\">Policy\n                        Groups\n                        <span class=\"requiredfield text-danger\">*</span>\n                        <span *ngIf=\"policyGroupsLength > 0\" class=\"pg-count ml-2\">{{policyGroupsLength}}</span>\n                      </label>\n                    </span>\n                  </span>\n                </ng-template>\n\n                <p-multiSelect name=\"policyGroupList\" [options]=\"policyGroupList\" formControlName=\"policyGroupId\"\n                  defaultLabel=\"Select Policy Groups\" optionLabel=\"policygroupname\" optionValue=\"id\"\n                  (onHide)=\"resetReportDashboardList()\" [resetFilterOnHide]=\"true\" inputId=\"policyGroupList\"\n                  ariaFilterLabel=\"null\" fieldKey=\"SETTINGS_ROL_POLICY_GROUP\" display=\"chip\"\n                  styleClass=\"policygroup-v2 w-100\" (onChange)=\"selectPolicyGroup()\">\n                </p-multiSelect>\n              </p-accordionTab>\n            </p-accordion>\n            <div *ngIf=\"formValidate['policyGroupId'].errors && formSubmit\">\n              <div *ngIf=\"formValidate['policyGroupId'].invalid\" class=\"p-error block mt-1\">Policy Group is required\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"mt-2\" *ngIf=\"permissionAllow\">\n          <button class=\"pull-right mb-2 mr-2 btn btn-primary btncommon\" fieldKey=\"SETTINGS_ROL_SELECT_ALL\"\n            (click)=\"selectAllAccess(true)\">\n            Select All\n          </button>\n          <button fieldKey=\"SETTINGS_ROL_RESET\" class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\"\n            (click)=\"selectAllAccess(false)\" [disabled]=\"checkedRolesArr.length === 0\">\n            Reset\n          </button>\n          <!-- <br /> -->\n        </div>\n        <div class=\"strip_head toggleleft adjusttop\" *ngIf=\"permissionAllow\">\n          <!-- <span class=\"report_head font-weight-bold\">Permissions</span> -->\n          <p-tabMenu [model]=\"items\" [activeItem]=\"activeItem\"></p-tabMenu>\n        </div>\n\n        <div *ngIf=\"firstTab\">\n          <div class=\"clearfix\"></div>\n          <div class=\"mt-2 mb-3\">\n            <div *ngIf=\"permissionAllow\">\n              <div class=\"permission-filter\">\n                <input class=\"form-control clearbox\" placeholder=\"Search by Permissions name\" type=\"text\"\n                  (keyup)=\"searchRolePermission($event)\" />\n                <i class=\"pi pi-times-circle\" (click)=\"clearPermission($event)\"></i>\n              </div>\n              <div class=\"d-flex align-items-center justify-content-center h-100 w-100 ng-star-inserted\"\n                *ngIf=\"!filterPermissions.length\">\n                <p>No Record Found</p>\n              </div>\n            </div>\n            <p-accordion class=\"w-100\">\n              <p-accordionTab class=\"w-100\" *ngFor=\"let page of permissions; let i = index\">\n                <ng-template pTemplate=\"header\">\n                  {{ page.description }}\n                </ng-template>\n                <ng-template pTemplate=\"content\">\n                  <div class=\"heading_analysis datamargin\">\n                    <div class=\"g-checkbox pl-1\">\n                      <input type=\"checkbox\" class=\"styled-checkbox\" id=\"custom{{ i }}\"\n                        (change)=\"selectAllPage(i, $event)\" [checked]=\"page?.checked\" />\n                      <label for=\"custom{{ i }}\" class=\"heading_role\">{{ page.description }}</label>\n                    </div>\n                  </div>\n\n                  <ul class=\"marginul_list ecms_rolescroll\">\n                    <ng-container *ngFor=\"let permission of page?.permissions; let j = index\">\n                      <ng-container *ngIf=\"isPrivilage(permission); else permissionOnly\">\n                        <li>\n                          <div class=\"inner_childaccess d-flex mt-0 py-1\">\n                            <div class=\"d-inline-flex align-items-center\">\n                              <label class=\"g-checkbox pl-1 mb-0\">\n                                <input type=\"checkbox\" [checked]=\"permission?.checked\"\n                                  (change)=\"selectAllPrivilage(i, j, $event)\" id=\"description{{ j }}\" />\n                                <span class=\"checkmark\"></span>\n                              </label>\n                              <label for=\"description{{ j }}\" class=\"heading_role mb-0\">{{\n                                permission.description\n                                }}</label>\n                            </div>\n                          </div>\n                        </li>\n                        <li class=\"ml-1\" *ngFor=\"let privilege of permission?.permissions; let k = index\">\n                          <div class=\"d-flex\">\n                            <div class=\"custom-control custom-switch\">\n                              <input type=\"checkbox\" [checked]=\"privilege?.checked\" class=\"custom-control-input\"\n                                id=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\"\n                                (click)=\"selectPrivilege(i, j, k, $event)\" />\n                              <label class=\"custom-control-label\" for=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\">{{\n                                privilege.description\n                                }}</label>\n                            </div>\n                          </div>\n                        </li>\n                      </ng-container>\n                      <ng-template #permissionOnly>\n                        <li>\n                          <div class=\"custom-control custom-switch\">\n                            <input type=\"checkbox\" [checked]=\"permission?.checked\" class=\"custom-control-input\"\n                              (click)=\"selectPage(i, j, $event)\" id=\"customSwitchesroles{{ i }}{{ j }}\" />\n                            <label class=\"custom-control-label\" for=\"customSwitchesroles{{ i }}{{ j }}\">{{\n                              permission.description }}\n                            </label>\n                          </div>\n                        </li>\n                      </ng-template>\n                    </ng-container>\n                  </ul>\n                </ng-template>\n              </p-accordionTab>\n            </p-accordion>\n            <div class=\"col-md-12 box d-none\" *ngFor=\"let page of permissions; let i = index\">\n              <div class=\"heading_analysis datamargin\">\n                <div class=\"Customcheckbox\">\n                  <input type=\"checkbox\" class=\"styled-checkbox\" id=\"custom{{ i }}\" (change)=\"selectAllPage(i, $event)\"\n                    [checked]=\"page?.checked\" />\n                  <label for=\"custom{{ i }}\" class=\"heading_role\">{{ page.description }}</label>\n                </div>\n              </div>\n\n              <ul class=\"marginul_list ecms_rolescroll\">\n                <ng-container *ngFor=\"let permission of page?.permissions; let j = index\">\n                  <ng-container *ngIf=\"isPrivilage(permission); else permissionOnly\">\n                    <li>\n                      <div class=\"inner_childaccess\">\n                        <label class=\"Customcheckbox\">\n                          <input type=\"checkbox\" [checked]=\"permission?.checked\"\n                            (change)=\"selectAllPrivilage(i, j, $event)\" />\n                          <span class=\"checkmark\"></span>\n                        </label>\n                        <span class=\"heading_role\">{{ permission.description }}</span>\n                      </div>\n                    </li>\n                    <li *ngFor=\"let privilege of permission?.permissions; let k = index\">\n                      <div class=\"custom-control custom-switch\">\n                        <input type=\"checkbox\" [checked]=\"privilege?.checked\" class=\"custom-control-input\"\n                          id=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\" (click)=\"selectPrivilege(i, j, k, $event)\" />\n                        <label class=\"custom-control-label\" for=\"customSwitchesroless{{ i }}{{ j }}{{ k }}\">{{\n                          privilege.description\n                          }}</label>\n                      </div>\n                    </li>\n                  </ng-container>\n                  <ng-template #permissionOnly>\n                    <li>\n                      <div class=\"custom-control custom-switch\">\n                        <input type=\"checkbox\" [checked]=\"permission?.checked\" class=\"custom-control-input\"\n                          (click)=\"selectPage(i, j, $event)\" id=\"customSwitchesroles{{ i }}{{ j }}\" />\n                        <label class=\"custom-control-label\" for=\"customSwitchesroles{{ i }}{{ j }}\">{{\n                          permission.description }}\n                        </label>\n                      </div>\n                    </li>\n                  </ng-template>\n                </ng-container>\n              </ul>\n            </div>\n          </div>\n          <div>\n            <button class=\"pull-right btn btn-primary btncommon\" fieldKey=\"SETTINGS_ROL_ADD_ROLE\" (click)=\"addRole()\">\n              {{ roleId ? 'Update' : 'Add' }} Role\n            </button>\n            <button class=\"pull-right mr-2 btn bg-white text-primary btncancel\" fieldKey=\"SETTINGS_ROL_CANCEL\"\n              (click)=\"cancel()\" [disabled]=\"!enableButton\">\n              Clear\n            </button>\n          </div>\n        </div>\n\n        <div *ngIf=\"!firstTab\">\n\n          <div class=\"card flex justify-content-center mt-4\">\n            <p-tree [value]=\"mainMenuList\" [draggableNodes]=\"true\" [droppableNodes]=\"true\" draggableScope=\"self\"\n              droppableScope=\"self\" class=\"w-full md:w-30rem\" selectionMode=\"single\" [(selection)]=\"selectedFile\"\n              [validateDrop]=\"true\" (onNodeDrop)=\"nodeDrop($event)\"></p-tree>\n          </div>\n\n          <div class=\"mt-2\">\n            <button class=\"pull-right mb-2 btn btn-primary btncommon\" fieldKey=\"SETTINGS_ROL_ADD_ROLE\"\n              (click)=\"updateMenuOrder()\">\n              Submit\n            </button>\n          </div>\n        </div>\n\n        <br />\n      </p-card>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" id=\"Deleteuser\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-body\">\n        <p>{{ modalContent }}</p>\n        <div class=\"clearfix\"></div>\n        <div class=\"mt-2\">\n          <button class=\"pull-right mb-2 btn btn-primary btncommon delete\" data-dismiss=\"modal\" (click)=\"deleteRole()\"\n            *ngIf=\"deleteactive_user\">\n            Delete\n          </button>\n\n          <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" data-dismiss=\"modal\"\n            *ngIf=\"deleteactive_buttonok\">\n            Cancel\n          </button>\n          <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" data-dismiss=\"modal\"\n            *ngIf=\"!deleteactive_buttonok\">\n            OK\n          </button>\n        </div>\n\n        <div class=\"clearfix\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PermissionStore } from './pics-rbac-roles/@core/permissions/permission.store';\nimport { DataStoreService } from './pics-rbac-roles/@core/service/data-store.service';\nimport { RBACINFO } from './pics-rbac-roles/@core/urls/rbac-url.config';\n\n@Component({\n  selector: 'rbac-roles',\n  template: `\n      <roles></roles>\n  `,\n  styles: [\n  ]\n})\nexport class RbacRolesComponent implements OnInit {\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\n  @Input() public PERMISSION?: any;\n  @Input() public roleEvent!: Observable<any>;\n  @Input() public INPUTVALIDATIONMETHOD? : any;\n\n  constructor(\n    private permissionStore: PermissionStore,\n    private _storeservice: DataStoreService\n  ) {\n  }\n  ngOnInit() {\n     this.roleEvent.subscribe(val => {\n      this.RBACORG = val.RBACORG;\n      this.PERMISSION = val.PERMISSION;\n      this._storeservice.setData('RBACORG', this.RBACORG);\n      this.permissionStore.setStore(this.PERMISSION);\n      this._storeservice.setData('HTTPSERVICE',val.httpService);\n      this._storeservice.setData('INPUTVALIDATIONMETHOD', this.INPUTVALIDATIONMETHOD);\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PermissionDirective } from './permission.directive';\nimport { ShowFieldDirective } from './show-field.directives';\n\n@NgModule({\n  declarations: [PermissionDirective, ShowFieldDirective],\n  imports: [CommonModule],\n  exports: [PermissionDirective, ShowFieldDirective]\n})\nexport class DirectivesModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlertComponent],\n  exports: [AlertComponent]\n})\nexport class AlertModule {}\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesComponent } from './roles/roles.component';\nimport { HttpClient } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AccordionModule } from 'primeng/accordion';\nimport { ConfirmationService, TreeDragDropService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { CardModule } from 'primeng/card';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { EditorModule } from 'primeng/editor';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { KnobModule } from 'primeng/knob';\nimport { MessageModule } from 'primeng/message';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { OrderListModule } from 'primeng/orderlist';\nimport { PasswordModule } from 'primeng/password';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { SpeedDialModule } from 'primeng/speeddial';\nimport { StepsModule } from 'primeng/steps';\nimport { TableModule } from 'primeng/table';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToastModule } from 'primeng/toast';\nimport { TreeSelectModule } from 'primeng/treeselect';\nimport { DirectivesModule } from './@core/directives/directives.module';\nimport { PermissionStore } from './@core/permissions/permission.store';\nimport { AlertService } from './@core/service/alert.service';\nimport { DataStoreService } from './@core/service/data-store.service';\nimport { MicrostrategyService } from './@core/service/microstrategy.service';\nimport { RbacService } from './@core/service/rbac.service';\nimport { AlertModule } from './@shared/alert/alert.module';\nimport { TreeModule } from 'primeng/tree';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n\n\n@NgModule({\n  declarations: [\n    RolesComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbModule,\n    TabMenuModule,\n    TabViewModule,\n    TreeSelectModule,\n    // HttpClientModule,\n    CheckboxModule,\n    DropdownModule,\n    CardModule,\n    ConfirmDialogModule,\n    AccordionModule,\n    MessageModule,\n    TableModule,\n    InputTextModule,\n    CalendarModule,\n    EditorModule,\n    FieldsetModule,\n    ButtonModule,\n    RadioButtonModule,\n    InputTextareaModule,\n    InputMaskModule,\n    StepsModule,\n    ToastModule,\n    RippleModule,\n    AvatarModule,\n    BadgeModule,\n    MultiSelectModule,\n    InputSwitchModule,\n    ProgressSpinnerModule,\n    SpeedDialModule,\n    OrderListModule,\n    FileUploadModule,\n    DialogModule,\n    PasswordModule,\n    KnobModule,\n    SidebarModule,\n    ContextMenuModule,\n    ConfirmPopupModule,\n    DirectivesModule,\n    AlertModule,\n    TreeModule,\n    DragDropModule\n  ],\n  exports: [RolesComponent],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n  providers: [RbacService, MicrostrategyService, HttpClient, AlertService, ConfirmationService, PermissionStore,\n     DataStoreService, TreeDragDropService]\n})\nexport class PicsRbacRolesModule { }\n","import { NgModule } from '@angular/core';\nimport { RbacRolesComponent } from './rbac-roles.component';\nimport { PicsRbacRolesModule } from './pics-rbac-roles/pics-rbac-roles.module';\nimport { DropdownModule } from 'primeng/dropdown';\n\n\n\n@NgModule({\n  declarations: [\n    RbacRolesComponent\n  ],\n  imports: [\n    PicsRbacRolesModule,\n    DropdownModule\n  ],\n  exports: [\n    RbacRolesComponent\n  ]\n\n})\nexport class RbacRolesModule { }\n","/*\n * Public API Surface of rbac-roles\n */\n\nexport * from './lib/rbac-roles.service';\nexport * from './lib/rbac-roles.component';\nexport * from './lib/rbac-roles.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.DataStoreService","i1.AlertService","i2","i1.PermissionStore","i1","i2.AlertService","i3.MicrostrategyService","i4.RbacService","i5.DataStoreService","i6.AlertComponent","i13.PermissionDirective","i15.ShowFieldDirective","i2.DataStoreService","i3.RolesComponent"],"mappings":"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"}